{"version":3,"sources":["components/Container/index.js","components/Row/index.js","components/Col/index.js","components/Card/index.js","components/Wrapper/index.js","components/SearchForm/index.js","components/EmployeeDetails/index.js","utils/API.js","components/RandomEmployee/index.js","pages/About.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","style","children","Row","Col","size","split","map","join","Card","heading","Wrapper","SearchForm","value","search","onChange","handleInputChange","name","type","placeholder","id","onClick","handleFormSubmit","EmployeeDetails","alt","picture","src","margin","phone","email","dob","axios","get","RandomEmployees","state","employees","sort","getRandomEmployees","API","then","res","console","log","data","results","setState","e","i","first","last","large","date","key","catch","err","sortByName","sortedList","searchEmployee","filter","filteredList","employee","Object","values","toLowerCase","indexOf","event","target","preventDefault","this","item","Component","About","marginTop","RandomEmployee","Header","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8631bd9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size}>{props.children}</div>;\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"\"\n          id=\"searchbox\"\n        />\n        <button\n          onClick={props.handleFormSubmit}\n          className=\"btn btn-primary\"\n          name=\"sort\"\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction EmployeeDetails(props) {\n    return (\n        // <div className=\"text-center\">\n        //     <img alt={props.picture} className=\"img-fluid\" src={props.picture} style={{ margin: \"0 auto\" }} />\n        //     <h3>First Name: {props.firstName}</h3>\n        //     <h3>Last Name: {props.lastName}</h3>\n        //     <h3>Phone: {props.phone}</h3>\n        //     <h3>Email: {props.email}</h3>\n        //     <h3>DOB: {props.dob}</h3>\n        // </div>\n\n\n        <tr>\n            <td>\n                <img\n                    alt={props.picture}\n                    className=\"img-fluid\"\n                    src={props.picture}\n                    style={{ margin: \"0 auto\" }}\n                />\n            </td>\n            <td>{props.name}</td>\n            <td>{props.phone}</td>\n            <td>{props.email}</td>\n            <td>{props.dob}</td>\n        </tr>\n\n    );\n}\n\nexport default EmployeeDetails;\n","import axios from \"axios\";\n\nexport default {\n    getUsers: function () {\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n    }\n};","import React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport Row from \"../Row\";\nimport Col from \"../Col\";\nimport Card from \"../Card\";\nimport Wrapper from \"../Wrapper\";\nimport SearchForm from \"../SearchForm\";\nimport EmployeeDetails from \"../EmployeeDetails\";\nimport API from \"../../utils/API\";\n\nclass RandomEmployees extends Component {\n    state = {\n        employees: [],\n        search: '',\n        sort: ''\n    };\n\n    componentDidMount() {\n        this.getRandomEmployees();\n    }\n\n    getRandomEmployees = () => {\n        API.getUsers()\n            .then((res) => {\n                console.log(res.data.results);\n                this.setState({\n                    employees: res.data.results.map((e, i) => ({\n                        name: e.name.first + \" \" + e.name.last,\n                        picture: e.picture.large,\n                        email: e.email,\n                        phone: e.phone,\n                        dob: e.dob.date,\n                        key: i,\n                    })),\n                });\n            })\n            .catch((err) => console.log(err));\n    };\n\n    sortByName = () => {\n        console.log(\"sort button clicked\");\n        console.log(this.state.employees);\n        const sortedList = this.state.employees.name.sort();\n        console.log(sortedList);\n        this.setState({ employees: sortedList });\n\n        // this.state.employees.sort();\n    };\n\n\n    searchEmployee = (filter) => {\n        console.log('Search', filter);\n        const filteredList = this.state.employees.filter((employee) => {\n            let values = Object.values(employee).join('').toLowerCase();\n            return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n        this.setState({ employees: filteredList });\n        console.log(filteredList);\n    };\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name]: value,\n        });\n        console.log('Handle ', this.state.search);\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log('Button Clicked', this.state.search, event);\n        this.searchEmployee(this.state.search);\n    };\n\n    render() {\n        return (\n            <Wrapper>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Col size=\"md-4\">\n                            <SearchForm\n                                value={this.state.search}\n                                handleInputChange={this.handleInputChange}\n                                handleFormSubmit={this.handleFormSubmit}\n                            />\n                        </Col>\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col size=\"md-12\">\n                                <Card>\n                                    <table>\n                                        <thead>\n                                            <tr>\n                                                <th>Photo</th>\n                                                <th><button onClick={this.sortByName}>Name</button></th>\n                                                <th>Phone</th>\n                                                <th>Email</th>\n                                                <th>DOB</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {[...this.state.employees].map((item) => (\n                                                <EmployeeDetails\n                                                    picture={item.picture}\n                                                    name={item.name}\n                                                    email={item.email}\n                                                    phone={item.phone}\n                                                    dob={item.dob}\n                                                    key={item.key}\n                                                />\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </Wrapper>\n        );\n    }\n}\n\nexport default RandomEmployees;\n","import React from \"react\";\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\nimport Col from \"../components/Col\";\nimport RandomEmployees from \"../components/RandomEmployee\";\n\nfunction About() {\n  return (\n    <div>\n      <Container style={{ marginTop: 30 }}>\n        <Row>\n          <Col size=\"md-12\">\n            <RandomEmployees/>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default About;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n        <div>\n        <header className=\"header\">\n            <span>Employee Directory</span>\n            </header>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header/>\n        <Wrapper>\n          <Route exact path=\"/\" component={About} />\n          <Route exact path=\"/about\" component={About} />\n        </Wrapper>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}